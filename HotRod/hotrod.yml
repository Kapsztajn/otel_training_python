services:
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=gopilaw
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning      

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.51
    ports:
      - '6831:6831'
      - '16686:16686'
      - '4319:4318'   

  hotrod:
    container_name: hotrod
    image: jaegertracing/example-hotrod:1.51
    ports:
      - '8080:8080'
      - '8083:8083'
    command: ["-m","prometheus","all"]
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
    volumes:
      - type: tmpfs
        target: /var/log/app_logs  # Use appropriate log directory
  
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.48.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    volumes:
      - "./loki/config.yaml:/etc/loki/local-config.yaml"
    command: -config.file=/etc/loki/local-config.yaml    

  otel-collector:  # Adding the OpenTelemetry Collector service
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel collector/otel-collector-config.yaml:/otel-collector-config.yaml
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: ["--config", "/otel-collector-config.yaml"]
    ports:
      - "4317:4317"  # gRPC endpoint for OTel Collector
      - "4318:4318"  # HTTP endpoint for OTel Collector
